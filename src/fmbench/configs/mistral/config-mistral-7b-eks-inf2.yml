general:
  name: "mistral-7b-eks-inf2"
  model_name: "mistral7b"
  
# AWS and SageMaker settings
aws:
  region: {region}
  # uncomment and set the Role ARN if not running on sagemaker
  sagemaker_execution_role: {role_arn}
  ## these are the buckets/resources you will create in your account below:
  bucket: {write_bucket} ## add the name of your desired bucket

## WRITE BUCKET -- Write the results, data, metrics, endpoint.json and payloads to this bucket directory
dir_paths:
    data_prefix: data ## add the prefix for all your data management/storage
    prompts_prefix: prompts
    all_prompts_file: all_prompts.csv
    metrics_dir: metrics
    models_dir: models
    metadata_dir: metadata ## add a file here to dynamically track the metrics dir

## READ BUCKET -- Represents the section to read from scripts, source data and tokenizer for a separate s3 bucket for read/write segregation
s3_read_data:
    read_bucket: {read_bucket}
    scripts_prefix: scripts ## add your own scripts in case you are using anything that is not on jumpstart
    script_files:
    - hf_token.txt  ## add your scripts files you have in s3 (including inference files, serving stacks, if any)
    configs_prefix: configs
    config_files:
    - pricing.yml ## mention the name of the config files that you want to be downloaded from s3 into the configs directory locally
    source_data_prefix: source_data  ## Add a source_data folder to store your raw data in an s3 path configured by you
    source_data_files:
    - 2wikimqa_e.jsonl
    - 2wikimqa.jsonl
    - hotpotqa_e.jsonl
    - hotpotqa.jsonl
    - narrativeqa.jsonl
    - triviaqa_e.jsonl
    - triviaqa.jsonl
    tokenizer_prefix: mistral_tokenizer ## add the tokenizer.json and config.json from your specific tokenizer type
    prompt_template_dir: prompt_template
    prompt_template_file: prompt_template_mistral.txt ## add your desired prompt template type

## section that enables container to run notebooks and python scripts automatically 
run_steps:
    0_setup.ipynb: yes
    1_generate_data.ipynb: no
    2_deploy_model.ipynb: yes
    3_run_inference.ipynb: no
    4_model_metric_analysis.ipynb: no
    5_cleanup.ipynb: no

datasets:
  prompt_template_keys:
  - input
  - context
  filters:
  - language: en    
    min_length_in_tokens: 1
    max_length_in_tokens: 500
    payload_file: payload_en_1-500.jsonl
  - language: en
    min_length_in_tokens: 500
    max_length_in_tokens: 1000
    payload_file: payload_en_500-1000.jsonl
  - language: en
    min_length_in_tokens: 1000
    max_length_in_tokens: 2000
    payload_file: payload_en_1000-2000.jsonl
  - language: en
    min_length_in_tokens: 2000
    max_length_in_tokens: 3000
    payload_file: payload_en_2000-3000.jsonl
  - language: en
    min_length_in_tokens: 3000
    max_length_in_tokens: 4000
    payload_file: payload_en_3000-4000.jsonl
  - language: en
    min_length_in_tokens: 305
    max_length_in_tokens: 3997
    payload_file: payload_en_305-3997.jsonl

metrics:
  dataset_of_interest: en_1-500

pricing: pricing.yml ## mention the name of the file that contains pricing information, within s3 or locally in the configs folder
  
inference_parameters:
  eks_parameter_set:
    do_sample: yes
    temperature: 0.1
    top_p: 0.92
    top_k: 120  
    max_new_tokens: 100

# Model configurations
experiments:
  - name: Mistral-7B-Instruct-eks
    model_id: Mistral-7B-Instruct-v0.2
    model_version: "*"
    model_name: mistral-7b-instruct
    ep_name: # endpoint name is not needed, since it is created dynamically and used
    instance_type: "inf2.24xlarge"    
    image_uri: public.ecr.aws/data-on-eks/ray2.11.0-py310-mistral7b-neuron:latest
    deploy: yes
    instance_count: 1
    deployment_script: eks_deploy.py
    inference_script: eks_predictor.py
    # refers to the eks custom parameters for the model
    eks:
      # This is the cluster created on Kubernetes
      # using do-eks: https://github.com/awslabs/data-on-eks/tree/main
      # The cluster is created using the github repository above. If there
      # is a cluster that you create, that is out of this repository or has a different
      # name, replace the cluster name below with your custom cluster name
      eks_cluster_name: trainium-inferentia
      # Represents the logical grouping of EKS resources
      # for the mistral model. All kubernetes resources related
      # to mistral will be in this namespace. Change this to 
      # llama3/llama2 for your use case
      eks_model_namespace: mistral 
      # name of the manifest directory where all of the EKS manifest files
      # reside
      manifest_dir: configs/eks_manifests
      # this is the yaml file to deploy the mistral model
      manifest_file: mistral-ray-service.yaml
      # this is the url format that gets appended to the 
      # model endpoint URL to run inferences from
      inference_url_format: /serve/infer
    inference_spec:
      parameter_set: eks_parameter_set
    payload_files:
    - payload_en_1-500.jsonl
    concurrency_levels:
    - 1
    - 2
    env:

report:
  latency_budget: 5
  cost_per_10k_txn_budget: 20
  error_rate_budget: 0
  per_inference_request_file: per_inference_request_results.csv
  all_metrics_file: all_metrics.csv
  txn_count_for_showing_cost: 10000
  v_shift_w_single_instance: 0.025
  v_shift_w_gt_one_instance: 0.025
  latency_vs_token_len_chart: 
    y_ticks: 
    # - 1
    # - 2
    # - 3
    # - 4
    title: "Effect of token length on inference latency for \"Mistral-7B-Instruct-eks\""

